@use '../../styles/main' as *;

.corner {
  display: none;
  position: absolute;
  top: 8px;
  right: 8px;
  cursor: pointer;
  color: $ontime-pink;
}

h1 {
  font-size: max(1.5em, 16px);
  color: $bg-gray-100;
  padding-bottom: 0.25em;
}

.mainContainer {
  background: $bg-black;
  width: 100%;
  height: 100%;
  margin: auto;
  color: $title-white;
  padding: max(16px, 2vh) max(8px, 1vh);

  display: grid;
  grid-template-rows: auto 1fr;
  grid-template-columns: 48px 46em 30em auto;
  grid-template-areas:
    'sett even play info'
    'sett even mess info';
  gap: max(8px, 1vh);

  .editor,
  .playback,
  .messages,
  .info,
  .settings{
    position: relative;

    .corner {
      display: inline;
    }
  }
}

.mainContainer > div {
  border-radius: 0.5em;
  height: 100%;
  background-color: $bg-gray-1000;
  padding: 0.8em 1.5em;

  display: flex;
  flex-direction: column;
}

.editor {
  grid-area: even;
  height: calc(100% - 3em);

  .content {
    height: calc(100% - 3em);
    overflow: hidden;
  }
}

.info {
  grid-area: info;
  min-width: 17em;

  .content {
    display: flex;
    flex-direction: column;
    height: calc(100% - 3em);
    overflow: hidden;
  }
}

.messages {
  grid-area: mess;
}

.playback {
  grid-area: play;
  min-height: 320px;
  max-height: 320px;
}

.messages,
.playback {
  min-width: 31em;
}

.mainContainer > .settings {
  grid-area: sett;
  background-color: transparent;
  padding: 0;
  margin: 0;
  width: fit-content;

  display: flex;
  flex-direction: column;
  gap: 1em;
}

.content {
  padding-top: 0.5em;
}


/* 2/3 window, hide info */
@media (max-width: 1450px) and (min-width: 1101px) {
  .mainContainer {
    height: 100%;
    grid-template-rows: auto 1fr;
    grid-template-columns: 40px 48em auto;

    .info {
      visibility: hidden;
    }
  }
}

/* 1/2 window, event list only */
@media (max-width: 1100px) and (min-width: 851px){
  .mainContainer {
    height: 100%;
    grid-template-rows: 1fr auto;
    grid-template-columns: 40px 48em;

    .info,
    .messages,
    .playback {
      visibility: hidden;
    }
  }
}

/* 1/3 window, show control only */
@media (max-width: 850px) and (min-height: 500px) {
  .mainContainer {
    grid-template-rows: auto 1fr;
    grid-template-columns: 100%;
    column-gap: 0;
    grid-template-areas:
      'play'
      'mess';

    .playback,
    .messages {
      visibility: visible;
    }

    .editor,
    .info,
    .settings {
      visibility: hidden;
    }
  }
}

/* 1/3 corner window, playback only */
@media (max-width: 850px) and (max-height: 500px) {
  .mainContainer {
    grid-template-rows: 100%;
    grid-template-columns: 100%;
    grid-template-areas: 'play';

    .playback {
      visibility: visible;
    }

    .editor,
    .messages,
    .info,
    .settings {
      visibility: hidden;
    }
  }
}

.mainContainer {
  .settings,
  .editor,
  .messages,
  .playback,
  .info {
    border-radius: 8px;
    height: 100%;
    background-color: $bg-gray-1000;
    padding: 0.8em 1.5em;

    display: flex;
    flex-direction: column;
  }
}

.eventEditor {
  border-radius: 8px 8px 0 0;
  background-color: darkslategrey;
  padding: 0.8em 1.5em;
  position: absolute;
  bottom: 0;
  width: 100vw;
  height: 40vh;
  left: 0;
  z-index: 10;
  color: white;
}

.editor {
  grid-area: even;
  height: calc(100% - 3em);

  .content {
    height: calc(100% - 3em);
    overflow: hidden;
  }
}

.info {
  grid-area: info;
  min-width: 17em;

  .content {
    display: flex;
    flex-direction: column;
    height: calc(100% - 3em);
    overflow: hidden;
  }
}

.messages {
  grid-area: mess;
}

.playback {
  grid-area: play;
  min-height: 320px;
  max-height: 320px;
}

.mainContainer > .settings {
  grid-area: sett;
  background-color: transparent;
  padding: 0;
  margin: 0;
  width: fit-content;
  padding-right: 8px;

  display: flex;
  flex-direction: column;
  gap: 1em;
}

.content {
  padding-top: 0.5em;
}

.cornerButtonContainer {
  position: relative;
  top: -4.5em;
  display: flex;
  justify-content: flex-end;
}

.buttonContainer {
  padding-bottom: 2em;
  display: flex;
  justify-content: flex-end;
}
